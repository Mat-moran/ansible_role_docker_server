---

## Install Docker packages
- name: Install apt-transport-https package
  apt:
    name: apt-transport-https
    install_recommends: no
    state: latest
  when: ansible_os_family == "Debian"

- name: Add Docker GPG key to APT
  apt_key:
    url: https://download.docker.com/linux/{{ ansible_distribution|lower }}/gpg
  when:  ansible_os_family == "Debian"

- name: Add Docker repo to APT repositories
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution|lower }}/ {{ ansible_distribution_release|lower }} stable
  when: ansible_os_family == "Debian"

- name: Add Docker repo to YUM repositories
  yum_repository:
    file: docker-ce
    name: docker-ce-stable
    description: Docker CE Stable - $basearch
    baseurl: https://download.docker.com/linux/centos/7/$basearch/stable
    gpgkey: https://download.docker.com/linux/centos/gpg
    gpgcheck: yes
  when: ansible_os_family == "RedHat"

- name: Remove old Debian Docker packages if present
  apt: 
    name: "{{ item }}"
    state: absent
    autoremove: yes
  with_items:
  - containerd
  - docker
  - docker-engine
  - docker.io
  - runc
  when: ansible_os_family == "Debian"

- name: Remove old RedHat Docker packages if present
  yum: 
    name: "{{ item }}"
    state: absent
  with_items:
  - docker
  - docker-client
  - docker-client-latest
  - docker-common
  - docker-engine
  - docker-latest
  - docker-latest-logrotate
  - docker-logrotate
  when: ansible_os_family == "RedHat"

- name: Install Debian OS packages
  apt: 
    name: "{{ item }}"
    state: latest
    update_cache: yes
    force: yes
    install_recommends: no
  async: 120
  poll: 10
  with_items:
  - git 
  - ca-certificates
  - curl
  - software-properties-common
  - docker-ce 
  - python-pip
  when: not ansible_check_mode and ansible_os_family == "Debian"

- name : Install RedHat OS packages
  yum:
    name: "{{ item }}"
    update_cache: yes
  async: 120
  poll: 10
  with_items:
    - device-mapper-persistent-data
    - lvm2
    - docker-ce
  when: not ansible_check_mode and ansible_os_family == "RedHat"

- name: Check installed Debian OS packages
  apt: 
    name: "{{ item }}"
    state: latest
    update_cache: yes
    force: yes
    install_recommends: no
  with_items:
  - git 
  - ca-certificates
  - curl
  - software-properties-common
  - docker-ce 
  - python-pip
  when: ansible_check_mode and ansible_os_family == "Debian"

- name : Check installed RedHat OS packages
  yum:
    name: "{{ item }}"
    update_cache: yes
  with_items:
    - device-mapper-persistent-data
    - lvm2
    - docker-ce
  when: ansible_check_mode and ansible_os_family == "RedHat"

- name: Install docker compose
  pip:
    name: "{{ item }}"
  with_items:
    - setuptools
    - docker-compose

- name: Create docker repo
  file:
    name: /home/docker/backups
    state: directory
    owner: root
    group: root

## Install Proxy docker
- name: Install proxy docker
  template:
    src: inverseproxy.yaml.j2
    dest: /home/docker/inverseproxy.yaml
    owner: root
    group: root
    mode: 0644 
  tags: docker_proxy

- name: start proxy docker
  docker_service:
    project_src: /home/docker/
    files: inverseproxy.yaml
    project_name: inverseproxy
  tags: docker_proxy,start_docker

